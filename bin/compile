#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -e

mkdir -p "$1" "$2"

build=$(cd "$1/" && pwd)
test -z ${build} && exit

cache=$(cd "$2/" && pwd)
test -z ${cache} && exit

ERLROOT=${build}/otp

OTP_SRC="otp_src_18"
tarball_otp=${OTP_SRC}.tar.gz
OTP_URL="http://www.erlang.org/download/${tarball_otp}"

NCURSES_SRC="ncurses-6.0"
tarball_ncurses=${NCURSES_SRC}.tar.gz
NCURSES_URL="http://ftp.gnu.org/gnu/ncurses/${tarball_ncurses}"

echo "-----> Using Erlang/OTP"

(
    set -e

    # Already cached?
    test -f ${cache}/${tarball_otp} && test -f ${cache}/${tarball_ncurses} && exit

    rm -rf ${cache}/*
    cd ${cache}

    echo "-------> Fetching NCurses"
    wget ${NCURSES_URL}
    echo "-------> Fetching Erlang/OTP"
    wget ${OTP_URL}

    echo "-------> Unpacking NCurses"
    tar -xf ${tarball_ncurses}
    echo "-------> Unpacking Erlang/OTP"
    gunzip -c ${tarball_otp} | tar xf -
)

if [ ! -e "erl" ]; then
    echo "-------> Building Erlang from source"
    mkdir -p ${ERLROOT}

    echo "-------> Configure Ncurses"
    cd ${NCURSES_SRC}
    ./configure --prefix=${ERLROOT}
    echo "-------> Make & install NCurses"
    make && make install

    cd ..

    echo "-------> Configure Erlang/OTP"
    cd ${OTP_SRC}
    ./configure --prefix=${ERLROOT}
    echo "-------> Make & install Erlang/OTP"
    make
    make install
fi

echo "-------> Set ERLROOT env"    
ln -s ${ERLROOT} /app/otp
PATH=/app/otp/bin:$PATH
export PATH

echo "-----> Build succeeded"